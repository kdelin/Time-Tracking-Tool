// Define the Packagepackage classes.view.timefield {		// Import Necessary Classes	import flash.filters.DropShadowFilter;	import flash.text.TextField;	import flash.text.AntiAliasType;	import flash.text.TextFormat;	import flash.text.TextFieldType;	import flash.events.Event;	import flash.events.KeyboardEvent;				// Define the Class	internal class TimeFieldInput extends TextField {						public function TimeFieldInput ( obj:Object = null ):void {						this.addEventListener(KeyboardEvent.KEY_DOWN, onKey);						obj = obj || new Object ( );						// Set the Text Format			defaultTextFormat = new TextFormat ( 'Arial', 13, 0x333333, null, null, null, null, null, null, 20 );						// Set Format properties			antiAliasType = AntiAliasType.ADVANCED;			type = TextFieldType.INPUT;			multiline = false;			doubleClickEnabled = true;			embedFonts = true;			maxChars = 10;			name = "my_text";						if ( obj.color != null ) { textColor = obj.color; };									width = obj.width || 200;			height = obj.width || 30;			y = obj.y || 13;						// Initialize/ReInitialize Properties			init ( obj );		}				// Initialize/ReInitialize Properties		public function init ( obj:Object ) : void {			for ( var n:String in obj ) if ( n in this ) this [ n ] = obj [ n ];					}				private function onKey(e:KeyboardEvent):void {						var t			:String = this.text;			// text in input field			var l			:int = t.length;				// length of text in input field			var c			:int = this.caretIndex;			// location of the caret			var k			:int = e.keyCode;				// what key has been typed			var s			:int = (t.search ( ":" ))+1;	// location of the semicolon						if ( k > 47 && k < 58 || k == 8 || k == 13 || k == 37 || k == 38 || k == 39 || k == 40   ) {				if ( k == 8 && s == c ) {					this.setSelection( c - 1, c - 1 );					e.preventDefault();				}				// if editing the minutes, only allow the 0 and the 3 and the up and down and delete buttons				if ( c >= s ) { if ( k == 8 || k == 13 || k == 38 || k == 40 ||k == 48 || k == 51 || k == 54 ) { } else { e.preventDefault(); };};				if ( c == s+1 ) { if ( k == 48 || k == 8 || k == 13 ) { } else { e.preventDefault(); };};				if ( k == 40 ) { this.setSelection(0, this.length); };							} else {				e.preventDefault();			}					}						// Override the Text Property		public override function set text ( val:String ) : void {			// Only Change Text when Necessary			if ( val !== null && typeof val !== 'undefined' && val != super.text ) super.text = val;		}	}}