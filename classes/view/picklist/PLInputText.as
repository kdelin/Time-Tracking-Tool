// Define the Packagepackage classes.view.picklist {		// Import Necessary Classes	import flash.filters.DropShadowFilter;	import flash.text.TextField;	import flash.text.AntiAliasType;	import flash.text.TextFormat;	import flash.text.TextFieldType;	import flash.events.Event;	import flash.utils.setTimeout;		// Define the Class	internal class PLInputText extends TextField {				// Instantiate the Class		public function PLInputText ( obj:Object = null ) : void {			// Ensure that an Object Exists			obj = obj || { };						// Set the Text Format			defaultTextFormat = new TextFormat ( 'Arial', 13, 0x333333, null, null, null, null, null, null, 20, null, null, -8 );			// Set Event Listeners			//PLInputListener.set ( { target:this, mouseOver:on_Over } );			// Set Anti-Alias Property			antiAliasType = AntiAliasType.ADVANCED;			// Set Type			type = TextFieldType.INPUT;			// Allow Double Clicks			doubleClickEnabled = true;			// Prevent Multiple Lines			multiline = false;			// Set the Width			width = obj.width || 200;			// Set the Height			height = obj.width || 30;			// Set the Y			y = obj.y || 8;			// Specify the Use of Embeded Fonts			embedFonts = true;			// Initialize/ReInitialize Properties			init ( obj );		}				// Initialize/ReInitialize Properties		public function init ( obj:Object ) : void {			// Initialize/Reinitialize Properties			for ( var n:String in obj ) if ( n in this ) this [ n ] = obj [ n ];		}				// React to Roll Over Events		private function on_Over ( evt:Event ) : void {			// Dispatch a RollOver Event			dispatchEvent ( new Event ( 'rollover', true ) );					}						// Override the Text Property		public override function set text ( val:String ) : void {			// Only Change Text when Necessary			if ( val !== null && typeof val !== 'undefined' && val != super.text ) super.text = val;		}	}}