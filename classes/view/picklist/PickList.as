// Define the Packagepackage classes.view.picklist {		// Import Necessary Classes	import flash.filters.DropShadowFilter;	import flash.display.DisplayObject;	import flash.filters.GlowFilter;	import flash.events.Event;	import flash.display.MovieClip;		import classes.view.picklist.PLInputText;		// Define the Class	public final class PickList extends PickListSprite {				// Crate a Vector for InputText Objects		public var inputtext:Vector.<PLInputText> = new <PLInputText> [ ];				// create var for PickList Row count		private var rowCount:int;				// Save a Reference to Grid Data Manager Object		//private var Data:PLDataManager = new PLDataManager ( );				// Instantiate the Class		public function PickList ( obj:Object = null ) : void {						// Ensure that an Object Exists			obj = obj || { };						// Create MovieClip that will house Picklist items			var mc:MovieClip = new MovieClip();			addChild(mc);									// Create GlowFilter Object			filters = filters.concat ( new GlowFilter ( 0, 1, 3, 3, 1, 1, true, false ) );			// Create DropShadowFilter Object			filters = filters.concat ( new DropShadowFilter ( 10, 89.9993809572637, 0, 1, 20, 20, 0.09765625,3, true, false, false ) );			// Create DropShadowFilter Object			filters = filters.concat ( new DropShadowFilter ( 2, 89.9993809572637, 0, 1, 6, 6, 0.5, 3, false, false, false ) );									// place existing content			addChild ( new PLInputText ( { text:obj.rowInfo[0] } ) );						// set up number of rows in picklist			rowCount = obj.rowInfo.length;												for ( var i:int = 0; i < rowCount; i++ ) {				mc.addChild ( new PLitem ( { myWidth:obj.width, y:23+(29*(i+1)), text:obj.rowInfo[i] } ) );			}																					// Initialize/Reinitialize Properties			init ( obj );		}				// Initialize/Reinitialize Properties		public function init ( obj:Object = null ) : void {			// Initialize/Reinitialize Properties			for ( var n:String in obj ) if ( n in this ) this [ n ] = obj [ n ];						// Reset the Scale			scaleX = scaleY = 1;						// Determine height of Picklist						var mh:int = 23+(29*(rowCount+1));						if ( mh > 163.5 ) { mh = 163.5; };						// Determine height of list			if ( obj.height > 163.5 ) { obj.height = 163.5; };									// Clear Graphics			graphics.clear();			// Define a Fill Color			graphics.beginFill(0xFFFFFF);			// Draw a Rectangle			graphics.drawRect( 0, 0, obj.width || 200, obj.height || 44.5 );						graphics.beginFill(0xFFFFFF);			// Draw a Rectangle			graphics.drawRect( 0, 45.5, obj.width || 200, mh );						PLInputListener.set ( { target:this, mouseMove:on_Out } );																								// Initialize the InputText Object			//inputtext [ 0 ].init ( { text:obj.text } );		}				public function pickListClick(arg:String):void {			trace("arg = " + arg);		}				// React to Roll Out Events		private function on_Out ( evt:Event ) : void {			// Dispatch a RollOut Event			dispatchEvent ( new Event ( 'PickList_RollOut', true ) );					}						// End all Loops and Listeners		public function end ( evt:Event = null ) : void {			// Set Event Listeners			//InputListener.set ( { target:this, fieldBlur:null } );			//			dispatchEvent ( new Event ( 'end', true ) );		}	}}