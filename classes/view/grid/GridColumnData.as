// Define the Packagepackage classes.view.grid {		// Import Necessary Classes		// Define the Class	internal final class GridDataManager {				// Create a Varianble for the Column Row Values		public var rows:Vector.<String> = new <String> [ ];		// Create a Varianble for the Column Label		public var label:String = '';		// Create a Varianble for the Column Format		public var format:String = '';		// Create a Varianble for the Column Width		public var width:Number;				// Instantiate the Class		public function GridDataManager ( obj:Object = null ) : void {			// Initialize Properties			init ( obj );		}				// Initialize/Reinitialize the Class		public function init ( obj:Object = null ) : void {			// Do Nothing if No Object is Given			if ( !obj ) return;			// Save a Reference to the Number of Columns			columnCount = obj.columnLabels.length			// Save a Reference to the Number of Rows			rowCount = obj.rowData.length;			// Create a Vector for Column Data			columnData = new Vector.<Object> ( columnCount );			// Loop through Column Data			for ( var n:int = columnCount; n--; ) {				// Create an Object for Column Data				var dat:Object = columnData [ n ] = {					// Create a Property for Column Label					label: obj.columnLabels [ n ],					// Create a Property for Column Format					format: obj.columnFormats [ n ],					// Create a Property for Column Width					width: obj.columnWidths [ n ],					// Create a Property for Column Row Values					rows: new Array ( rowCount )				};				// Create a Property for Picklist Values				dat.list = dat.type === 'picklist' ? obj.picklistData.pop ( ) : null				// Save Row Values within the Column Data Object				for ( var i:int = rowCount; i--; ) dat.rows [ i ] = obj.rowData [ i ][ n ];			}		}	}}