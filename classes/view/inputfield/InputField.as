// Define the Packagepackage classes.view.inputfield {		// Import Necessary Classes	import flash.filters.DropShadowFilter;	import flash.display.DisplayObject;	import flash.filters.GlowFilter;	import flash.events.Event;	import flash.text.TextField;	import flash.events.FocusEvent;		// Define the Class	public final class InputField extends InputSprite {				// Crate a Vector for InputText Objects		public var inputtext:Vector.<InputText> = new <InputText> [ ];		// Create a Variable for Column Index		public var index:uint = 0;		// Create a Variable for TextField		public var text_fld:InputText;				// Instantiate the Class		public function InputField ( obj:Object = null ) : void {			// Ensure that an Object Exists			obj = obj || new Object ( );			// Create GlowFilter Object			filters = filters.concat ( new GlowFilter ( 0, 1, 3, 3, 1, 1, true, false ) );			// Create DropShadowFilter Object			filters = filters.concat ( new DropShadowFilter ( 10, 89.9993809572637, 0, 1, 20, 20, 0.09765625,3, true, false, false ) );			// Create DropShadowFilter Object			filters = filters.concat ( new DropShadowFilter ( 2, 89.9993809572637, 0, 1, 6, 6, 0.5, 3, false, false, false ) );			// Set Event Listeners			InputListener.set ( { target:this, addedToStage:on_added, mouseFocusChange:on_blur, keyFocusChange:on_blur } );			// Add an InputText Object			text_fld = addChild ( new InputText ( ) ) as InputText;			// Initialize/Reinitialize Properties			init ( obj );		}				// React to Focus Change Events		public function on_blur ( evt:FocusEvent ) : void {			// Check that We Still Have Focus			if ( evt.relatedObject === this ) {				// Stop Event Bubbling				evt.stopPropagation ( );				// Stop Blur Process				evt.preventDefault ( );				// Do Nothing Further				return;			}			// Remove Us From the Stage			parent.removeChild ( this );			// Dispatch an Event			dispatchEvent ( new InputEvent ( { type:'done', value:text_fld.text } ) );		}				// React to Added to Stage Events		public function on_added ( evt:Event ) : void {			// Set the TextField Selection			InputText ( stage.focus = text_fld ).setSelection ( 0, 999 );		}				// Initialize/Reinitialize Properties		public function init ( obj:Object = null ) : void {			// Initialize/Reinitialize Properties			for ( var n:String in obj ) if ( n in this ) this [ n ] = obj [ n ];			// Reset the Scale			scaleX = scaleY = 1;			// Clear Graphics			graphics.clear ( );			// Define a Fill Color			graphics.beginFill ( 0xFFFFFF );			// Draw a Rectangle			graphics.drawRect ( 0, 0, obj.width || 200, obj.height || 45 );			// Initialize the InputText Object			inputtext [ 0 ].init ( { text:obj.text, width:width - 48 } );		}	}}