// Define the Packagepackage classes.view.inputfield {		// Import Necessary Classes	import flash.filters.DropShadowFilter;	import flash.display.DisplayObject;	import flash.filters.GlowFilter;	import flash.events.Event;		// Define the Class	public final class InputField extends InputSprite {				// Input Necessary Classes		import classes.view.inputfield.InputText;		// Crate a Vector for InputText Objects		public var inputtext:Vector.<InputText> = new <InputText> [ ];		// Create a Variable for Column Index		public var index:uint = 0;				// Instantiate the Class		public function InputField ( obj:Object = null ) : void {			// Ensure that an Object Exists			obj = obj || { };			// Create GlowFilter Object			filters = filters.concat ( new GlowFilter ( 0, 1, 3, 3, 1, 1, true, false ) );			// Create DropShadowFilter Object			filters = filters.concat ( new DropShadowFilter ( 10, 89.9993809572637, 0, 1, 20, 20, 0.09765625,3, true, false, false ) );			// Create DropShadowFilter Object			filters = filters.concat ( new DropShadowFilter ( 2, 89.9993809572637, 0, 1, 6, 6, 0.5, 3, false, false, false ) );			//  Add an InputText Object			addChild ( new InputText ( ) );			// Initialize/Reinitialize Properties			init ( obj );		}				// Initialize/Reinitialize Properties		public function init ( obj:Object = null ) : void {			// Initialize/Reinitialize Properties			for ( var n:String in obj ) if ( n in this ) this [ n ] = obj [ n ];			// Reset the Scale			scaleX = scaleY = 1;			// Clear Graphics			graphics.clear ( );			// Define a Fill Color			graphics.beginFill ( 0xFFFFFF );			// Draw a Rectangle			graphics.drawRect ( 0, 0, obj.width || 200, obj.height || 45 );			// Initialize the InputText Object			inputtext [ 0 ].init ( { text:obj.text } );		}						// End all Loops and Listeners		public function end ( evt:Event = null ) : void {			// Set Event Listeners			InputListener.set ( { target:this, fieldBlur:null } );			//			dispatchEvent ( new Event ( 'end', true ) );		}	}}